pipeline {

    agent any

    stages {

        stage('Cleanup Workspace') {
            steps {
                cleanWs()
                echo "Workspace cleaned"
            }
        }

        stage('Environment variables') {
            steps {
                // Cr√©ation des fichiers env
                script {
                    def drupal-content = ''
                    def python-content = ''
                    withCredentials([file(credentialsId: drupal-env, variable: 'DRUPAL_FILE')]) {
                        drupal-content = readFile(file: "${env.DRUPAL_FILE}")
                    }
                    writeFile(file: 'drupal/.env', text: drupal-content)

                    withCredentials([file(credentialsId: python-env, variable: 'PYTHON_FILE')]) {
                        python-content = readFile(file: "${env.PYTHON_FILE}")
                    }
                    writeFile(file: 'python/.env', text: python-content)

                    sh 'cat drupal/.env'
                }
                echo "Environement variables created"
            }
        }

        stage('Monolith launch') {
            steps {
                //  Lancement drupal

                echo "Drupal is ready"
            }
        }

        stage('Application tests') {
            steps {
                // Tests unitaires

                echo "Tests passed"
            }
        }

        stage('Deployment') {
            steps {
                // Lancement de l'app

                echo "Microservice deployed sucessfully"
            }
        }

    }
}
